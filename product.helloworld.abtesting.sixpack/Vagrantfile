# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.

Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "ubuntu/xenial64"
  config.vm.hostname = "ab-test"

  ENV['LC_ALL']="en_US.UTF-8"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080
  #config.vm.network "forwarded_port", guest: 8088, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  config.vm.network "forwarded_port", guest: 5001, host: 5001

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network "private_network", ip: "192.168.33.15"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  #config.vm.synced_folder "target", "/vagrant_target"
  #config.vm.synced_folder "scripts", "/vagrant_scripts"



  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:


  config.vm.provider "virtualbox" do |vb|
      # Display the VirtualBox GUI when booting the machine
   	  # vb.gui = true

      # Customize the amount of memory on the VM:
        vb.memory = "8192"
    	vb.cpus = 4
   end

  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.

  config.vm.provision "shell", inline: <<-SHELL
     sudo apt-get update
     sudo apt install python-pip -y
     pip install --upgrade pip
     pip install sixpack
     sudo apt-get install redis-server -y
     sudo apt-get install supervisor -y
     sudo mkdir /etc/sixpack
     sudo touch /etc/sixpack/config.yml
     sudo tee -a /etc/sixpack/config.yml > /dev/null <<EOT
     redis_port: 6379                            # Redis port
     redis_host: localhost                       # Redis host
     redis_prefix: sixpack                       # all Redis keys will be prefixed with this
     redis_db: 15                                # DB number in redis

     metrics: false                              # send metrics to StatsD (response times, # of calls, etc)?
     statsd_url: 'udp://localhost:8125/sixpack'  # StatsD url to connect to (used only when metrics: true)

     # The regex to match for robots
     robot_regex: $^|trivial|facebook|MetaURI|butterfly|google|amazon|goldfire|sleuth|xenu|msnbot|SiteUptime|Slurp|WordPress|ZIBB|ZyBorg|pingdom|bot|yahoo|slurp|java|fetch|spider|url|crawl|oneriot|abby|commentreader|twiceler
     ignored_ip_addresses: []                    # List of IP

     asset_path: gen                             # Path for compressed assets to live. This path is RELATIVE to sixpack/static
     secret_key: 'test'        # Random key (any string is valid, required for sixpack-web to run)
EOT
     SHELL



end
